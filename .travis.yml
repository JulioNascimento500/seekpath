sudo: required

language: python

matrix: 
    include:
    - python: "2.7"
      env: TEST_CODE=true TEST_DOCKER=false TEST_PRECOMMIT=false
    - python: "2.7"
      env: TEST_PRECOMMIT=true TEST_CODE=false TEST_DOCKER=false 
    - python: "3.5"
      env: TEST_CODE=true TEST_DOCKER=false TEST_PRECOMMIT=false
    - python: "2.7"
      env: TEST_CODE=false TEST_DOCKER=true TEST_PRECOMMIT=false
      services: 
      - docker

cache: pip

notifications:
    email:
        on_success: never
        on_failure: always

addons:
    apt:
        packages:
            - curl
            - gfortran
            - libblas-dev
            - liblapack-dev 

before_install:
    - pip install --upgrade pip setuptools

install:
    - if [ "$TEST_CODE" == "true" ] ; then pip install -r optional-requirements.txt --only-binary numpy,scipy && pip install -e . ; fi
    - if [ "$TEST_PRECOMMIT" == "true" ] ;  then pip install -r optional-requirements.txt --only-binary numpy,scipy && pip install -e .[dev] ; fi
    - if [ "$TEST_DOCKER" == "true" ] ; then docker build -t seekpathdocker . && docker run -d -p 10080:80 seekpathdocker && docker ps ; fi

script:
    - if [ "$TEST_PRECOMMIT" == "true" ] ; then pre-commit run --all-files || ( git diff ; exit 1 ) ; fi

    # Very minimal test for the time being; before starting, wait (up to 2 minutes) for the service to go up
    # Note: I sleep 15 secs because I need to give the time to nginx + wsgi to start up, otherwise I get
    # 'connection reset by peer' errors. It is not sufficient to wait for the connection to be up, as the port
    # opens, but then the connection is dropped. I don't know if there is a better way...
    - if [ "$TEST_DOCKER" == "true" ] ; then misc/wait-for-it.sh localhost:10080 -t 120 && sleep 15 && curl -X POST --data "examplestructure=mC1_inv" http://localhost:10080/process_example_structure/ > example.html && grep -F "C2/c (number 15)" example.html || ( cat example.html ; exit 1 ) ; else echo "Testing the docker image disabled for this run [log below]" ; fi

    - if [ "$TEST_CODE" == "true" ] ; then python run_tests.py ; else echo "Testing of the code disabled for this build [log below]" ; fi
    
    # Note that the following command changes folder!
    - if [ "$TEST_CODE" == "true" ] ; then cd webservice && echo "ANotSoRandomKeyJustForTesting" > SECRET_KEY && python seekpath_app_test.py ; else echo "Testing of the code disabled for this build [log below]" ; fi



